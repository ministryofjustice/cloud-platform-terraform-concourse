#!/bin/sh

set -o errexit
set -o pipefail

_checkenv(){
  missing=""
  for v in URL TEAM BASIC_AUTH_USERNAME BASIC_AUTH_PASSWORD CLUSTER; do
    vn="CONCOURSE_${v}"
    fv=""
    eval fv="\$$vn"
    if [ -z "${fv}" ]; then
      missing="${missing}\n\t${vn}"
    fi
  done
  if [ ! -z "${missing}" ]; then
    echo "missing environment variables:${missing}"
    exit 1
  fi
}

_checkenv

curl -sL -o /usr/local/bin/fly "${CONCOURSE_URL}/api/v1/cli?arch=amd64&platform=linux" && chmod +x /usr/local/bin/fly

fly \
  -t current \
  login \
  -k \
  -c ${CONCOURSE_URL} \
  -n ${CONCOURSE_TEAM} \
  -u ${CONCOURSE_BASIC_AUTH_USERNAME} \
  -p ${CONCOURSE_BASIC_AUTH_PASSWORD}

fly -t current pipelines -a | awk '{ print $2; }' | sort > current_pipelines

_team_path="pipelines/${CONCOURSE_CLUSTER}/${CONCOURSE_TEAM}"

find "${_team_path}" -iname '*.yaml' -exec basename {} \; | cut -d'.' -f1 | sort > git_pipelines

for i in $(comm -23 current_pipelines git_pipelines); do
  echo ">>> deleting pipeline '${i}'"
  (
    set -x
    fly \
      -t current \
      destroy-pipeline \
      -n \
      -p "${i}"
  )
done

for i in $(cat git_pipelines); do
  echo ">>> setting pipeline '${i}'"
  (
    set -x
    fly \
      -t current \
      set-pipeline \
      -n \
      -p "${i}" \
      -c "${_team_path}/${i}.yaml"
    fly \
      -t current \
      unpause-pipeline \
      -p "${i}"
  )
done
