#!/bin/sh

set -o errexit
set -o pipefail

_checkenv(){
  missing=""
  for v in URL TEAM BASIC_AUTH_USERNAME BASIC_AUTH_PASSWORD FLY_VERSION CLUSTER; do
    vn="CONCOURSE_${v}"
    fv=""
    eval fv="\$$vn"
    if [ -z "${fv}" ]; then
      missing="${missing}\n\t${vn}"
    fi
  done
  if [ ! -z "${missing}" ]; then
    echo "missing environment variables:${missing}"
    exit 1
  fi
}

_tf() {
  if [ "${#}" != 2 ]; then return 1; fi
  if [ "${1}" != "apply" ] && [ "${1}" != "destroy" ]; then return 1; fi
  if [ ! -d "${2}" ]; then return 0; fi
  cd "${2}"
  echo ">>> creating pipeline resources for $(basename ${2})"
  (
    set -x
    terraform init
    terraform "${1}" -auto-approve | sed -E 's/((content|template):[[:space:]]+)".+"/\1<REDACTED>/'
  )
  cd $OLDPWD
}

_checkenv

apk add \
  --no-cache \
  --no-progress \
  curl \
  tar

curl -Ls "https://github.com/concourse/concourse/releases/download/v${CONCOURSE_FLY_VERSION}/fly-${CONCOURSE_FLY_VERSION}-linux-amd64.tgz" | tar zxf - -C /usr/local/bin

fly \
  -t current \
  login \
  -k \
  -c ${CONCOURSE_URL} \
  -n ${CONCOURSE_TEAM} \
  -u ${CONCOURSE_BASIC_AUTH_USERNAME} \
  -p ${CONCOURSE_BASIC_AUTH_PASSWORD}

fly -t current pipelines -a | awk '{ print $1; }' | sort > current_pipelines

_team_path="pipelines/${CONCOURSE_CLUSTER}/${CONCOURSE_TEAM}"

find "${_team_path}" -iname '*.yaml' -exec basename {} \; | cut -d'.' -f1 | sort > git_pipelines

for i in $(comm -23 current_pipelines git_pipelines); do
  echo ">>> deleting pipeline '${i}'"
  (
    set -x
    fly \
      -t current \
      destroy-pipeline \
      -n \
      -p "${i}"
  )

  _tf destroy "${_team_path}/${i}"
done

for i in $(cat git_pipelines); do
  _tf apply "${_team_path}/${i}"

  echo ">>> setting pipeline '${i}'"
  (
    set -x
    fly \
      -t current \
      set-pipeline \
      -n \
      -p "${i}" \
      -c "${_team_path}/${i}.yaml"
    fly \
      -t current \
      unpause-pipeline \
      -p "${i}"
  )
done
