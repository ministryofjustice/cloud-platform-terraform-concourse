resources:
  - name: cloud-platform-cli-image
    type: registry-image
    source:
      repository: ministryofjustice/cloud-platform-cli
      tag: "1.30.13"
      username: ((ministryofjustice-dockerhub.dockerhub_username))
      password: ((ministryofjustice-dockerhub.dockerhub_password))

kube-config: &KUBECONFIG_PARAMS
  KUBECONFIG: /tmp/kubeconfig
  KUBECONFIG_CLUSTER_NAME: ((cluster_name))

aws_params: &aws_params
  AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
  AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
  AWS_REGION: eu-west-2
  AWS_PROFILE: moj-cp

groups:
  - name: cordon-and-drain-nodes
    jobs:
      - cordon-and-drain-nodes

jobs:
  - name: cordon-and-drain-nodes
    max_in_flight: 1
    plan:
      - get: cloud-platform-cli-image
      - task: cordon-and-drain-nodes
        timeout: 12h
        image: cloud-platform-cli-image
        config:
          platform: linux
          params:
            <<: [*aws_params, *KUBECONFIG_PARAMS]
            NODE_GROUP_TO_DRAIN: ((node_group_to_drain))
          run:
            path: /bin/bash
            args:
              - -c
              - |
                set -e

                mkdir ${HOME}/.aws
                echo "[moj-cp]" >> ${HOME}/.aws/credentials # This forces you to have profiles
                
                aws eks --region eu-west-2 update-kubeconfig --name $KUBECONFIG_CLUSTER_NAME

                kubectl get pods --field-selector="status.phase=Failed" -A --no-headers | awk '{print $2 " -n " $1}' | parallel -j1 --will-cite kubectl delete pod "{= uq =}"

                kubectl get nodes -l eks.amazonaws.com/nodegroup=$NODE_GROUP_TO_DRAIN --no-headers | awk '{print $1}' | parallel -j1 --keep-order --delay 300 --will-cite cloud-platform cluster recycle-node --name {} --skip-version-check --kubecfg $KUBECONFIG --drain-only --ignore-label
 
