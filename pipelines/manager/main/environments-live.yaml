slack-notification-defaults: &SLACK_NOTIFICATION_DEFAULTS
  channel: '#lower-priority-alarms'
  silent: true
slack-attachments-defaults: &SLACK_ATTACHMENTS_DEFAULTS
  fallback: 'Finished building $BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME#$BUILD_NAME'
  title: '$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME#$BUILD_NAME'
  title_link: 'https://concourse.cloud-platform.service.justice.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME'
  footer: concourse.cloud-platform.service.justice.gov.uk

resources:
- name: cloud-platform-environments-repo
  type: git
  source:
    uri: https://github.com/ministryofjustice/cloud-platform-environments.git
    branch: main
    git_crypt_key: ((cloud-platform-environments-git-crypt.key))
- name: cloud-platform-environments-live-pull-requests
  type: pull-request
  check_every: 1m
  source:
    repository: ministryofjustice/cloud-platform-environments
    access_token: ((cloud-platform-environments-pr-git-access-token))
    git_crypt_key: ((cloud-platform-environments-git-crypt.key))
    paths:
    - namespaces/live.cloud-platform.service.justice.gov.uk
- name: pipeline-tools-image
  type: docker-image
  source:
    repository: ministryofjustice/cloud-platform-pipeline-tools
    tag: "1.43"
    username: ((ministryofjustice-dockerhub.dockerhub_username))
    password: ((ministryofjustice-dockerhub.dockerhub_password))
- name: slack-alert
  type: slack-notification
  source:
    url: https://hooks.slack.com/services/((slack-hook-id))
- name: every-120m
  type: time
  source:
    interval: 120m

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
    username: ((ministryofjustice-dockerhub.dockerhub_username))
    password: ((ministryofjustice-dockerhub.dockerhub_password))
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource
    username: ((ministryofjustice-dockerhub.dockerhub_username))
    password: ((ministryofjustice-dockerhub.dockerhub_password))


groups:
- name: environments-terraform
  jobs:
    - apply-live
    - apply-namespace-changes-live
    - plan-live

jobs:
  - name: apply-live
    serial: true
    plan:
      - in_parallel:
        - get: every-120m
          trigger: true
        - get: cloud-platform-environments-repo
          trigger: false
        - get: pipeline-tools-image
      - task: apply-environments
        image: pipeline-tools-image
        config:
          platform: linux
          inputs:
            - name: cloud-platform-environments-repo
          params:
            AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
            AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
            KUBECONFIG: /tmp/kubeconfig
            KUBE_CONFIG_PATH: /tmp/kubeconfig
            TF_PLUGIN_CACHE_DIR: /tmp/terraform-plugin-cache
            PINGDOM_API_TOKEN: ((cloud-platform-environments-pingdom.pingdom_api_token))
            # the variables prefixed with PIPELINE_ are used by the apply script
            PIPELINE_CLUSTER: live.cloud-platform.service.justice.gov.uk
            PIPELINE_STATE_BUCKET: cloud-platform-terraform-state
            PIPELINE_STATE_KEY_PREFIX: "cloud-platform-environments/"
            PIPELINE_CLUSTER_STATE: live-1.cloud-platform.service.justice.gov.uk
            PIPELINE_STATE_REGION: "eu-west-1"
            PIPELINE_TERRAFORM_STATE_LOCK_TABLE: "cloud-platform-environments-terraform-lock"
            TF_VAR_concourse_url: "https://concourse.cloud-platform.service.justice.gov.uk"
            TF_VAR_concourse_basic_auth_username: ((concourse-basic-auth.username))
            TF_VAR_concourse_basic_auth_password: ((concourse-basic-auth.password))
            # the variable cluster_name here is used to get VPC info
            TF_VAR_cluster_name: "live-1"
            TF_VAR_cluster_state_bucket: cloud-platform-terraform-state
            TF_VAR_cluster_state_key: "cloud-platform/live/terraform.tfstate"
            TF_VAR_github_owner: "ministryofjustice"
            TF_VAR_github_token: ((github-actions-secrets-token.token))
          run:
            path: /bin/sh
            dir: cloud-platform-environments-repo
            args:
              - -c
              - |
                mkdir -p "${TF_PLUGIN_CACHE_DIR}"
                (
                  aws s3 cp s3://cloud-platform-concourse-kubeconfig/kubeconfig /tmp/kubeconfig
                )
                bundle install --without development test
                ./bin/apply
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_NOTIFICATION_DEFAULTS
            attachments:
              - color: "danger"
                <<: *SLACK_ATTACHMENTS_DEFAULTS

  - name: apply-namespace-changes-live
    serial: false
    plan:
      - in_parallel:
        - get: cloud-platform-environments-repo
          trigger: true
        - get: pipeline-tools-image
      - task: apply-namespace-changes
        image: pipeline-tools-image
        config:
          platform: linux
          inputs:
            - name: cloud-platform-environments-repo
          params:
            AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
            AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
            KUBECONFIG: /tmp/kubeconfig
            KUBE_CONFIG_PATH: /tmp/kubeconfig
            TF_PLUGIN_CACHE_DIR: /tmp/terraform-plugin-cache
            PINGDOM_API_TOKEN: ((cloud-platform-environments-pingdom.pingdom_api_token))
            # the variables prefixed with PIPELINE_ are used by the apply script
            PIPELINE_CLUSTER: live.cloud-platform.service.justice.gov.uk
            PIPELINE_STATE_BUCKET: cloud-platform-terraform-state
            PIPELINE_STATE_KEY_PREFIX: "cloud-platform-environments/"
            PIPELINE_CLUSTER_STATE: live-1.cloud-platform.service.justice.gov.uk
            PIPELINE_STATE_REGION: "eu-west-1"
            PIPELINE_TERRAFORM_STATE_LOCK_TABLE: "cloud-platform-environments-terraform-lock"
            TF_VAR_concourse_url: "https://concourse.cloud-platform.service.justice.gov.uk"
            TF_VAR_concourse_basic_auth_username: ((concourse-basic-auth.username))
            TF_VAR_concourse_basic_auth_password: ((concourse-basic-auth.password))
            # the variable cluster_name here is used to get VPC info
            TF_VAR_cluster_name: "live-1"
            TF_VAR_cluster_state_bucket: cloud-platform-terraform-state
            TF_VAR_cluster_state_key: "cloud-platform/live/terraform.tfstate"
            TF_VAR_github_owner: "ministryofjustice"
            TF_VAR_github_token: ((github-actions-secrets-token.token))
          run:
            path: /bin/sh
            dir: cloud-platform-environments-repo
            args:
              - -c
              - |
                mkdir -p "${TF_PLUGIN_CACHE_DIR}"
                (
                  aws s3 cp s3://cloud-platform-concourse-kubeconfig/kubeconfig /tmp/kubeconfig
                )
                bundle install --without development test
                ./bin/apply-namespace-changes
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_NOTIFICATION_DEFAULTS
            attachments:
              - color: "danger"
                <<: *SLACK_ATTACHMENTS_DEFAULTS

  - name: plan-live
    serial: true
    plan:
      - get: cloud-platform-environments-live-pull-requests
        trigger: true
        version: every
      - put: cloud-platform-environments-live-pull-requests
        params:
          path: cloud-platform-environments-live-pull-requests
          status: pending
      - get: pipeline-tools-image
      - task: plan-environments
        image: pipeline-tools-image
        config:
          platform: linux
          inputs:
            - name: cloud-platform-environments-live-pull-requests
          params:
            AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
            AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
            KUBECONFIG: /tmp/kubeconfig
            KUBE_CONFIG_PATH: /tmp/kubeconfig
            TF_PLUGIN_CACHE_DIR: /tmp/terraform-plugin-cache
            PINGDOM_API_TOKEN: ((cloud-platform-environments-pingdom.pingdom_api_token))
            # the variables prefixed with PIPELINE_ are used by the plan script
            PIPELINE_CLUSTER: live.cloud-platform.service.justice.gov.uk
            PIPELINE_STATE_BUCKET: cloud-platform-terraform-state
            PIPELINE_STATE_KEY_PREFIX: "cloud-platform-environments/"
            PIPELINE_CLUSTER_STATE: live-1.cloud-platform.service.justice.gov.uk
            PIPELINE_STATE_REGION: "eu-west-1"
            PIPELINE_TERRAFORM_STATE_LOCK_TABLE: "cloud-platform-environments-terraform-lock"
            # the variable cluster_name here is used to get VPC info
            TF_VAR_cluster_name: "live-1"
            TF_VAR_cluster_state_bucket: cloud-platform-terraform-state
            TF_VAR_concourse_url: "https://concourse.cloud-platform.service.justice.gov.uk"
            TF_VAR_concourse_basic_auth_username: ((concourse-basic-auth.username))
            TF_VAR_concourse_basic_auth_password: ((concourse-basic-auth.password))
            TF_VAR_cluster_state_key: "cloud-platform/live-1/terraform.tfstate"
            TF_VAR_github_owner: "ministryofjustice"
            TF_VAR_github_token: ((github-actions-secrets-token.token))
          run:
            path: /bin/sh
            dir: cloud-platform-environments-live-pull-requests
            args:
              - -c
              - |
                mkdir -p "${TF_PLUGIN_CACHE_DIR}"
                (
                  aws s3 cp s3://cloud-platform-concourse-kubeconfig/kubeconfig /tmp/kubeconfig
                )
                export branch_head_sha=$(cat .git/resource/metadata.json | jq -r '.[] | select(.name == "head_sha") | .value')
                export main_base_sha=$(cat .git/resource/metadata.json | jq -r '.[] | select(.name == "base_sha") | .value')
                bundle install --without development test
                ./bin/plan
        on_failure:
            put: cloud-platform-environments-live-pull-requests
            params:
              path: cloud-platform-environments-live-pull-requests
              status: failure
        on_success:
            put: cloud-platform-environments-live-pull-requests
            params:
              path: cloud-platform-environments-live-pull-requests
              status: success
