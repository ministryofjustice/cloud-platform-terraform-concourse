aws-credentials: &AWS_CREDENTIALS
  AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
  AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
  AWS_REGION: eu-west-2

kube-config: &KUBECONFIG_PARAMS
  KUBECONFIG: /tmp/kubeconfig
  KUBE_CONFIG_PATH: /tmp/kubeconfig
  TF_PLUGIN_CACHE_DIR: /tmp/terraform-plugin-cache

pingdom: &PINGDOM_PARAMS
  PINGDOM_API_TOKEN: ((cloud-platform-environments-pingdom.pingdom_api_token))

slack: &SLACK_BOT_PARAMS
  SLACK_BOT_TOKEN: ((cloud-platform-environments-slack.slack_bot_token))
  SLACK_WEBHOOK_URL: ((cloud-platform-environments-slack.slack_webhook_url))

github-token: &GITHUB_PARAMS
  GITHUB_TOKEN: ((github-actions-secrets-token.token))

apply-plan-pipeline: &APPLY_PLAN_PIPELINE
  PIPELINE_STATE_BUCKET: cloud-platform-terraform-state
  PIPELINE_STATE_KEY_PREFIX: "cloud-platform-environments/"
  PIPELINE_TERRAFORM_STATE_LOCK_TABLE: "cloud-platform-environments-terraform-lock"
  PIPELINE_STATE_REGION: "eu-west-1" # The region of the state bucket
  # the variables prefixed with PIPELINE_ are used by the apply script
  PIPELINE_CLUSTER: arn:aws:eks:eu-west-2:754256621582:cluster/live
  PIPELINE_CLUSTER_DIR: live.cloud-platform.service.justice.gov.uk
  PIPELINE_CLUSTER_STATE: live-1.cloud-platform.service.justice.gov.uk

environments-live-bucket: &ENVIRONMENTS_LIVE_BUCKET
  ENVIRONMENTS_LIVE_S3_BUCKET: ((environments-live-reports-s3-bucket))

terraform-shared: &TERRAFORM_SHARED
  TF_VAR_cluster_name: "live-1"
  TF_VAR_cluster_state_bucket: cloud-platform-terraform-state
  TF_VAR_github_owner: "ministryofjustice"
  TF_VAR_github_token: ((github-actions-secrets-token.token))
  TF_VAR_vpc_name: "live-1"
  TF_VAR_eks_cluster_name: "live"
  TF_VAR_kubernetes_cluster: DF366E49809688A3B16EEC29707D8C09.gr7.eu-west-2.eks.amazonaws.com

slack-notification-defaults: &SLACK_NOTIFICATION_DEFAULTS
  channel: '#lower-priority-alarms'
  silent: true
slack-attachments-defaults: &SLACK_ATTACHMENTS_DEFAULTS
  fallback: 'Finished building $BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME#$BUILD_NAME'
  title: '$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME#$BUILD_NAME'
  title_link: 'https://concourse.cloud-platform.service.justice.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME'
  footer: concourse.cloud-platform.service.justice.gov.uk

resources:
- name: cloud-platform-environments
  type: git
  source:
    uri: https://github.com/ministryofjustice/cloud-platform-environments.git
    branch: main
    git_crypt_key: ((cloud-platform-environments-git-crypt.key))
- name: cloud-platform-environments-live-pull-requests
  type: pull-request
  check_every: 1m
  source:
    repository: ministryofjustice/cloud-platform-environments
    access_token: ((cloud-platform-environments-pr-git-access-token))
    git_crypt_key: ((cloud-platform-environments-git-crypt.key))
- name: pipeline-tools-image
  type: docker-image
  source:
    repository: ministryofjustice/cloud-platform-pipeline-tools
    tag: "2.9.5"
    username: ((ministryofjustice-dockerhub.dockerhub_username))
    password: ((ministryofjustice-dockerhub.dockerhub_password))
- name: cloud-platform-cli
  type: registry-image
  source:
    repository: ministryofjustice/cloud-platform-cli
    tag: "1.49.0"
    username: ((ministryofjustice-dockerhub.dockerhub_username))
    password: ((ministryofjustice-dockerhub.dockerhub_password))
- name: cloud-platform-environments-live-pull-requests-merged
  type: pull-request
  check_every: 1m
  source:
    base_branch: main
    states:
      - MERGED
    repository: ministryofjustice/cloud-platform-environments
    access_token: ((cloud-platform-environments-pr-git-access-token))
    git_crypt_key: ((cloud-platform-environments-git-crypt.key))
- name: slack-alert
  type: slack-notification
  source:
    url: https://hooks.slack.com/services/((slack-hook-id))
- name: cloud-platform-opa-auto-approve
  type: git
  source:
    uri: https://github.com/ministryofjustice/cloud-platform-opa-auto-approve.git
    branch: main

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
    username: ((ministryofjustice-dockerhub.dockerhub_username))
    password: ((ministryofjustice-dockerhub.dockerhub_password))
- name: pull-request
  type: docker-image
  source:
  ## The image for this resource is customised from teliaoss/github-pr-resource to avoid hitting Github GraphQL API rate limits. https://github.com/ministryofjustice/cloud-platform/issues/5566
    repository: ministryofjustice/cloud-platform-concourse-github-pr-resource
    tag: v1.0.5
    username: ((ministryofjustice-dockerhub.dockerhub_username))
    password: ((ministryofjustice-dockerhub.dockerhub_password))
- name: keyval
  type: docker-image
  source:
    repository: swce/keyval-resource
- name: build-env-printer
  type: docker-image
  source:
    repository: governmentpaas/olhtbr-metadata-resource
    tag: latest

groups:
- name: environments-terraform
  jobs:
    - apply-namespace-changes-live
    - apply-namespace-live-manually
    - plan-live
    - plan-live-manually
    - detect-deleted-namespaces
    - destroy-deleted-namespaces

jobs:
  - name: apply-namespace-changes-live
    serial: false
    plan:
      - in_parallel:
        - get: cloud-platform-environments-live-pull-requests-merged
          trigger: true
          version: every
        - get: cloud-platform-cli
      - put: cloud-platform-environments-live-pull-requests-merged
        params:
          path: cloud-platform-environments-live-pull-requests-merged
          status: pending
          comment: " Your PR is applying in the build: https://concourse.cloud-platform.service.justice.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
      - task: apply-namespace-changes
        timeout: 2h
        image: cloud-platform-cli
        config:
          platform: linux
          inputs:
            - name: cloud-platform-environments-live-pull-requests-merged
          params:
            <<:
              [
                *AWS_CREDENTIALS,
                *KUBECONFIG_PARAMS,
                *PINGDOM_PARAMS,
                *GITHUB_PARAMS,
                *SLACK_BOT_PARAMS,
                *APPLY_PLAN_PIPELINE,
                *TERRAFORM_SHARED,
              ]
          run:
            path: /bin/bash
            dir: cloud-platform-environments-live-pull-requests-merged
            args:
              - -c
              - |
                mkdir -p "${TF_PLUGIN_CACHE_DIR}"
                (
                  aws eks --region eu-west-2 update-kubeconfig --name $TF_VAR_eks_cluster_name
                )
                export PR=$(cat .git/resource/pr)

                echo $PR

                BUILD_URL=$(curl -L \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer $GITHUB_TOKEN" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  "https://api.github.com/repos/ministryofjustice/cloud-platform-environments/issues/$PR/comments" \
                  | jq -r '.[]
                  | select(.body | contains("Your PR is applying in the build:"))
                  | .body' \
                  | awk '{print $8}' \
                  | tail -n 1)

                echo $BUILD_URL

                cloud-platform environment apply \
                  --skip-version-check \
                  --cluster $PIPELINE_CLUSTER \
                  --clusterdir $PIPELINE_CLUSTER_DIR \
                  --build-url $BUILD_URL\
                  --pr-number $PR \
                  --kubecfg $KUBECONFIG
        on_success:
          put: cloud-platform-environments-live-pull-requests-merged
          params:
            path: cloud-platform-environments-live-pull-requests-merged
            status: success
        on_failure:
          put: cloud-platform-environments-live-pull-requests-merged
          params:
            path: cloud-platform-environments-live-pull-requests-merged
            status: failure
          put: slack-alert
          params:
            <<: *SLACK_NOTIFICATION_DEFAULTS
            attachments:
              - color: "danger"
                <<: *SLACK_ATTACHMENTS_DEFAULTS

  - name: apply-namespace-live-manually
    serial: false
    plan:
      - in_parallel:
        - get: cloud-platform-environments
          trigger: false
        - get: cloud-platform-cli
      - task: apply-namespace-changes-manually
        timeout: 1h
        image: cloud-platform-cli
        config:
          platform: linux
          inputs:
            - name: cloud-platform-environments
          params:
            <<:
              [
                *AWS_CREDENTIALS,
                *KUBECONFIG_PARAMS,
                *PINGDOM_PARAMS,
                *APPLY_PLAN_PIPELINE,
                *TERRAFORM_SHARED,
                *SLACK_BOT_PARAMS,
              ]
          run:
            path: /bin/bash
            dir: cloud-platform-environments
            args:
              - -c
              - |
                mkdir -p "${TF_PLUGIN_CACHE_DIR}"
                (
                  aws eks --region eu-west-2 update-kubeconfig --name $TF_VAR_eks_cluster_name
                )
                # Update the namespace name below to apply
                # export NAMESPACE=cloud-platform-dev
                cloud-platform environment apply \
                  --skip-version-check \
                  --namespace $NAMESPACE \
                  --cluster $PIPELINE_CLUSTER \
                  --clusterdir $PIPELINE_CLUSTER_DIR \
                  --kubecfg $KUBECONFIG
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_NOTIFICATION_DEFAULTS
            attachments:
              - color: "danger"
                <<: *SLACK_ATTACHMENTS_DEFAULTS

  - name: plan-live-manually
    serial: true
    plan:
      - get: cloud-platform-environments
        trigger: false
      - get: cloud-platform-cli
      - task: plan-environments-manually
        timeout: 1h
        image: cloud-platform-cli
        config:
          platform: linux
          inputs:
            - name: cloud-platform-environments
          params:
            <<:
              [
                *AWS_CREDENTIALS,
                *KUBECONFIG_PARAMS,
                *PINGDOM_PARAMS,
                *APPLY_PLAN_PIPELINE,
                *TERRAFORM_SHARED,
              ]
          run:
            path: /bin/bash
            dir: cloud-platform-environments
            args:
              - -c
              - |
                mkdir -p "${TF_PLUGIN_CACHE_DIR}"
                (
                  aws eks --region eu-west-2 update-kubeconfig --name $TF_VAR_eks_cluster_name
                )
                # Set the PR number for which u want to do a plan
                # export PR=XXXX

                cloud-platform environment plan \
                  --skip-version-check \
                  --pr-number $PR \
                  --cluster $PIPELINE_CLUSTER \
                  --clusterdir $PIPELINE_CLUSTER_DIR \
                  --kubecfg $KUBECONFIG
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_NOTIFICATION_DEFAULTS
            attachments:
              - color: "danger"
                <<: *SLACK_ATTACHMENTS_DEFAULTS

  - name: plan-live
    serial: true
    plan:
      - get: cloud-platform-environments-live-pull-requests
        trigger: true
        version: every
      - put: cloud-platform-environments-live-pull-requests
        params:
          path: cloud-platform-environments-live-pull-requests
          status: pending
      - get: cloud-platform-opa-auto-approve
      - get: cloud-platform-cli
      - task: plan-environments
        timeout: 1h
        image: cloud-platform-cli
        config:
          platform: linux
          inputs:
            - name: cloud-platform-environments-live-pull-requests
            - name: cloud-platform-opa-auto-approve
          params:
            <<:
              [
                *AWS_CREDENTIALS,
                *KUBECONFIG_PARAMS,
                *PINGDOM_PARAMS,
                *APPLY_PLAN_PIPELINE,
                *GITHUB_PARAMS,
                *TERRAFORM_SHARED,
              ]
          run:
            path: /bin/bash
            dir: cloud-platform-environments-live-pull-requests
            args:
              - -c
              - |
                set -e

                mkdir -p "${TF_PLUGIN_CACHE_DIR}"
                (
                  aws eks --region eu-west-2 update-kubeconfig --name $TF_VAR_eks_cluster_name
                )
                export PR=$(cat .git/resource/pr)

                cloud-platform environment plan \
                  --skip-version-check \
                  --pr-number $PR \
                  --cluster $PIPELINE_CLUSTER \
                  --clusterdir $PIPELINE_CLUSTER_DIR \
                  --kubecfg $KUBECONFIG

                PLAN_FILE=( $(find . -type f -name "plan-*.out") )
                PLAN_COUNT=${#PLAN_FILE[@]}

                if [ "$PLAN_COUNT" -ne 1 ]; then
                  exit 0
                fi

                PLAN_DIR="$(dirname "$PLAN_FILE")"
                PLAN_NAME="$(basename "$PLAN_FILE")"

                NAMESPACE_CONTAINS_SKIP_FILE=$(ls "${PLAN_DIR}/.." | grep APPLY_PIPELINE_SKIP_THIS_NAMESPACE | if [[ $(wc -l) -eq 1 ]]; then echo true; else echo false; fi)

                cp -r ../cloud-platform-opa-auto-approve .

                ./cloud-platform-opa-auto-approve/auto_approve.sh $PLAN_DIR $PLAN_NAME $PR $NAMESPACE_CONTAINS_SKIP_FILE

        on_failure:
            put: cloud-platform-environments-live-pull-requests
            params:
              path: cloud-platform-environments-live-pull-requests
              status: failure
        on_success:
            put: cloud-platform-environments-live-pull-requests
            params:
              path: cloud-platform-environments-live-pull-requests
              status: success

  - name: detect-deleted-namespaces
    serial: true
    plan:
      - in_parallel:
        - get: cloud-platform-environments
          trigger: true
        - get: pipeline-tools-image
      - task: detect-deleted-namespaces
        image: pipeline-tools-image
        config:
          platform: linux
          inputs:
            - name: cloud-platform-environments
          params:
            AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
            AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
            KUBECONFIG_S3_BUCKET: cloud-platform-concourse-kubeconfig
            KUBECONFIG_S3_KEY: kubeconfig
            KUBE_CONFIG: /tmp/kubeconfig
            KUBE_CONFIG_PATH: /tmp/kubeconfig
            KUBE_CTX: live.cloud-platform.service.justice.gov.uk
            PIPELINE_STATE_BUCKET: cloud-platform-terraform-state
            PIPELINE_STATE_KEY_PREFIX: "cloud-platform-environments/"
            PIPELINE_STATE_REGION: "eu-west-1"
            SLACK_WEBHOOK: ((slack-hook-id))
            PIPELINE_CLUSTER: live.cloud-platform.service.justice.gov.uk
            PIPELINE_TERRAFORM_STATE_LOCK_TABLE: "cloud-platform-environments-terraform-lock"
            # the variable cluster_name here is used to get VPC info
            TF_VAR_github_owner: "ministryofjustice"
            TF_VAR_github_token: ((github-actions-secrets-token.token))
            TF_VAR_vpc_name: "live-1"
            TF_VAR_eks_cluster_name: "live"
          run:
            path: /bin/sh
            dir: cloud-platform-environments
            args:
              - -c
              - |
                bundle install --without development test
                ./bin/deleted-namespaces.rb
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_NOTIFICATION_DEFAULTS
            attachments:
              - color: "danger"
                <<: *SLACK_ATTACHMENTS_DEFAULTS

  - name: destroy-deleted-namespaces
    serial: true
    plan:
      - in_parallel:
        - get: cloud-platform-environments-live-pull-requests-merged
          trigger: true
          version: every
        - get: cloud-platform-cli
      - task: destroy-deleted-namespaces
        timeout: 1h
        image: cloud-platform-cli
        config:
          platform: linux
          inputs:
            - name: cloud-platform-environments-live-pull-requests-merged
          params:
            <<:
              [
                *AWS_CREDENTIALS,
                *KUBECONFIG_PARAMS,
                *PINGDOM_PARAMS,
                *APPLY_PLAN_PIPELINE,
                *TERRAFORM_SHARED,
                *SLACK_BOT_PARAMS,
              ]
          run:
            path: /bin/bash
            dir: cloud-platform-environments-live-pull-requests-merged
            args:
              - -c
              - |
                mkdir -p "${TF_PLUGIN_CACHE_DIR}"
                (
                  aws eks --region eu-west-2 update-kubeconfig --name $TF_VAR_eks_cluster_name
                )
                export PR=$(cat .git/resource/pr)
                echo $PR
                cloud-platform environment destroy \
                  --skip-version-check \
                  --cluster $PIPELINE_CLUSTER \
                  --clusterdir $PIPELINE_CLUSTER_DIR \
                  --pr-number $PR \
                  --kubecfg $KUBECONFIG
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_NOTIFICATION_DEFAULTS
            attachments:
              - color: "danger"
                <<: *SLACK_ATTACHMENTS_DEFAULTS
