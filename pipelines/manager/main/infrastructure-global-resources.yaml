aws-credentials: &AWS_CREDENTIALS
  AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
  AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
  AWS_REGION: eu-west-2
  AWS_PROFILE: moj-cp

auth0: &AUTH0_CONF
  AUTH0_DOMAIN: "justice-cloud-platform.eu.auth0.com"
  AUTH0_CLIENT_ID: ((concourse-tf-auth0-credentials.client-id))
  AUTH0_CLIENT_SECRET: ((concourse-tf-auth0-credentials.client_secret))

slack-notification-defaults: &SLACK_NOTIFICATION_DEFAULTS
  channel: "#lower-priority-alarms"
slack-attachments-defaults: &SLACK_ATTACHMENTS_DEFAULTS
  fallback: "Finished building $BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME#$BUILD_NAME"
  title: "$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME#$BUILD_NAME"
  title_link: "https://concourse.cloud-platform.service.justice.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
  footer: concourse.cloud-platform.service.justice.gov.uk/

resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
      username: ((ministryofjustice-dockerhub.dockerhub_username))
      password: ((ministryofjustice-dockerhub.dockerhub_password))

resources:
  - name: cloud-platform-tools
    type: docker-image
    source:
      repository: ministryofjustice/cloud-platform-tools
      tag: "2.7.1"
      username: ((ministryofjustice-dockerhub.dockerhub_username))
      password: ((ministryofjustice-dockerhub.dockerhub_password))
  - name: pull-request
    type: pull-request
    check_every: 2m
    source:
      disable_forks: true
      ignore_drafts: false
      base_branch: main
      repository: ministryofjustice/cloud-platform-infrastructure
      access_token: ((cloud-platform-infrastructure-pr-git-access-token))
      git_crypt_key: ((cloud-platform-infrastructure-git-crypt.key))
      paths:
        - terraform/global-resources/**
  - name: cloud-platform-infrastructure-repo
    type: git
    source:
      uri: https://github.com/ministryofjustice/cloud-platform-infrastructure.git
      branch: main
      git_crypt_key: ((cloud-platform-infrastructure-git-crypt.key))
      paths: 
        - terraform/global-resources/**
  - name: slack-alert
    type: slack-notification
    source:
      url: https://hooks.slack.com/services/((slack-hook-id))

groups:
  - name: infrastructure-global-resources
    jobs:
      - terraform-plan
      - terraform-apply

jobs:
  - name: terraform-plan
    serial: true
    plan:
      - in_parallel:
          - get: cloud-platform-tools
          - get: pull-request
            trigger: true
            version: every
      - put: pull-request
        params:
          path: pull-request
          status: pending
          base_context: infrastructure-global-resources
          context: plan
      - in_parallel:
          - task: execute-infrastructure-global-resources
            image: cloud-platform-tools
            config:
              platform: linux
              params:
                <<: [*AUTH0_CONF, *AWS_CREDENTIALS]
              inputs:
                - name: pull-request
              run:
                path: /bin/bash
                dir: pull-request/terraform/global-resources
                args:
                  - -c
                  - |
                    aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile moj-cp
                    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile moj-cp
                    terraform init
                    terraform plan -input=false -detailed-exitcode -lock-timeout=3m | \
                      sed -e 's/AWS_SECRET_ACCESS_KEY".*/<REDACTED>/g' \
                      -e 's/AWS_ACCESS_KEY_ID".*/<REDACTED>/g' \
                      -e 's/$AWS_SECRET_ACCESS_KEY".*/<REDACTED>/g' \
                      -e 's/$AWS_ACCESS_KEY_ID".*/<REDACTED>/g' \
                      -e 's/\[id=.*\]/\[id=<REDACTED>\]/g'
                    if [ ${PIPESTATUS[0]} -eq 1 ]; then exit 1; else exit 0; fi
            on_failure:
              put: pull-request
              params:
                path: pull-request
                status: failure
                base_context: infrastructure-global-resources
                context: plan
            on_success:
              put: pull-request
              params:
                path: pull-request
                status: success
                base_context: infrastructure-global-resources
                context: plan

  - name: terraform-apply
    serial: true
    plan:
      - in_parallel:
          - get: cloud-platform-tools
          - get: cloud-platform-infrastructure-repo
            trigger: true
      - in_parallel:
          - task: execute-infrastructure-global-resources
            image: cloud-platform-tools
            config:
              platform: linux
              params:
                <<: [*AUTH0_CONF, *AWS_CREDENTIALS]
              inputs:
                - name: cloud-platform-infrastructure-repo
              run:
                path: /bin/bash
                dir: cloud-platform-infrastructure-repo/terraform/global-resources
                args:
                  - -c
                  - |
                    aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile moj-cp
                    aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile moj-cp
                    terraform init
                    terraform apply -input=false -lock-timeout=3m -auto-approve | \
                      sed -e 's/AWS_SECRET_ACCESS_KEY".*/<REDACTED>/g' \
                      -e 's/AWS_ACCESS_KEY_ID".*/<REDACTED>/g' \
                      -e 's/$AWS_SECRET_ACCESS_KEY".*/<REDACTED>/g' \
                      -e 's/$AWS_ACCESS_KEY_ID".*/<REDACTED>/g' \
                      -e 's/\[id=.*\]/\[id=<REDACTED>\]/g'
                    if [ ${PIPESTATUS[0]} -eq 1 ]; then exit 1; else exit 0; fi
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_NOTIFICATION_DEFAULTS
            attachments:
              - color: "danger"
                <<: *SLACK_ATTACHMENTS_DEFAULTS
