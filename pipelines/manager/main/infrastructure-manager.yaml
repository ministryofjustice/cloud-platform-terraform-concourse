aws-credentials: &AWS_CREDENTIALS
  AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
  AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
  AWS_REGION: eu-west-2

kube-config: &KUBECONFIG_PARAMS
  KUBECONFIG_S3_BUCKET: cloud-platform-concourse-kubeconfig
  KUBECONFIG_S3_KEY: kubeconfig
  KUBECONFIG: /tmp/kubeconfig

auth0: &AUTH0_CONF
  AUTH0_DOMAIN: "justice-cloud-platform.eu.auth0.com"
  AUTH0_CLIENT_ID: ((concourse-tf-auth0-credentials.client-id))
  AUTH0_CLIENT_SECRET: ((concourse-tf-auth0-credentials.client_secret))

slack-notification-defaults: &SLACK_NOTIFICATION_DEFAULTS
  channel: "#lower-priority-alarms"
slack-attachments-defaults: &SLACK_ATTACHMENTS_DEFAULTS
  fallback: "Finished building $BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME#$BUILD_NAME"
  title: "$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME#$BUILD_NAME"
  title_link: "https://concourse.cloud-platform.service.justice.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
  footer: concourse.cloud-platform.service.justice.gov.uk/

resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: "0.23.0"
      username: ((ministryofjustice-dockerhub.dockerhub_username))
      password: ((ministryofjustice-dockerhub.dockerhub_password))

resources:
  - name: cloud-platform-tools
    type: docker-image
    source:
      repository: ministryofjustice/cloud-platform-tools
      tag: "2.3.0"
      username: ((ministryofjustice-dockerhub.dockerhub_username))
      password: ((ministryofjustice-dockerhub.dockerhub_password))
  - name: cloud-platform-infrastructure-repo
    type: git
    source:
      uri: https://github.com/ministryofjustice/cloud-platform-infrastructure.git
      branch: main
      git_crypt_key: ((cloud-platform-infrastructure-git-crypt.key))
      paths: 
        - terraform/aws-accounts/cloud-platform-aws/vpc/eks/**/*
  - name: slack-alert
    type: slack-notification
    source:
      url: https://hooks.slack.com/services/((slack-hook-id))

groups:
  - name: infrastructure-manager
    jobs:
      - terraform-apply-manager

jobs:

  - name: terraform-apply-manager
    serial: true
    plan:
      - in_parallel:
          - get: cloud-platform-tools
          - get: cloud-platform-infrastructure-repo
            trigger: true
      - in_parallel:
          - task: execute-cluster-apply
            image: cloud-platform-tools
            config:
              platform: linux
              params:
                <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
              inputs:
                - name: cloud-platform-infrastructure-repo
              run:
                path: /bin/bash
                dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks
                args:
                  - -c
                  - |
                    (
                    aws s3 cp s3://cloud-platform-concourse-kubeconfig/kubeconfig /tmp/kubeconfig
                    kubectl config use-context manager.cloud-platform.service.justice.gov.uk
                    )

                    # Get the latest from main 
                    git pull origin main

                    terraform init -backend-config="dynamodb_table=cloud-platform-terraform-state"
                    terraform workspace select manager
                    terraform apply -input=false -lock-timeout=3m -auto-approve | \
                      sed -e 's/AWS_SECRET_ACCESS_KEY".*/<REDACTED>/g' \
                      -e 's/AWS_ACCESS_KEY_ID".*/<REDACTED>/g' \
                      -e 's/$AWS_SECRET_ACCESS_KEY".*/<REDACTED>/g' \
                      -e 's/$AWS_ACCESS_KEY_ID".*/<REDACTED>/g' \
                      -e 's/\[id=.*\]/\[id=<REDACTED>\]/g'
                    if [ ${PIPESTATUS[0]} -eq 1 ]; then exit 1; else exit 0; fi

          - task: execute-components-apply
            image: cloud-platform-tools
            config:
              platform: linux
              params:
                <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
              inputs:
                - name: cloud-platform-infrastructure-repo
              run:
                path: /bin/bash
                dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks/components
                args:
                  - -c
                  - |
                    (
                    aws s3 cp s3://cloud-platform-concourse-kubeconfig/kubeconfig /tmp/kubeconfig
                    kubectl config use-context manager.cloud-platform.service.justice.gov.uk
                    )

                    # Get the latest from main 
                    git pull origin main

                    terraform init -backend-config="dynamodb_table=cloud-platform-terraform-state"
                    terraform workspace select manager
                    terraform apply -input=false -lock-timeout=3m -auto-approve | \
                      sed -e 's/AWS_SECRET_ACCESS_KEY".*/<REDACTED>/g' \
                      -e 's/AWS_ACCESS_KEY_ID".*/<REDACTED>/g' \
                      -e 's/$AWS_SECRET_ACCESS_KEY".*/<REDACTED>/g' \
                      -e 's/$AWS_ACCESS_KEY_ID".*/<REDACTED>/g' \
                      -e 's/\[id=.*\]/\[id=<REDACTED>\]/g'
                    if [ ${PIPESTATUS[0]} -eq 1 ]; then exit 1; else exit 0; fi
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_NOTIFICATION_DEFAULTS
            attachments:
              - color: "danger"
                <<: *SLACK_ATTACHMENTS_DEFAULTS
