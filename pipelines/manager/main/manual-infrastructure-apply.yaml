aws-credentials: &AWS_CREDENTIALS
  AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
  AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
  AWS_REGION: eu-west-2

kube-config: &KUBECONFIG_PARAMS
  KUBECONFIG: /tmp/kubeconfig
  KUBECONFIG_CLUSTER_NAME: "live-2"

auth0: &AUTH0_CONF
  AUTH0_DOMAIN: "justice-cloud-platform.eu.auth0.com"
  AUTH0_CLIENT_ID: ((concourse-tf-auth0-credentials.client-id))
  AUTH0_CLIENT_SECRET: ((concourse-tf-auth0-credentials.client_secret))
  
resources:
  - name: cloud-platform-cli
    type: registry-image
    source:
      repository: ministryofjustice/cloud-platform-cli
      tag: "1.36.0"
      username: ((ministryofjustice-dockerhub.dockerhub_username))
      password: ((ministryofjustice-dockerhub.dockerhub_password))
  - name: cloud-platform-infrastructure-repo
    type: git
    source:
      uri: https://github.com/ministryofjustice/cloud-platform-infrastructure.git
      branch: main
      git_crypt_key: ((cloud-platform-infrastructure-git-crypt.key))

groups:
  - name: manual-infra-apply-live-2
    jobs:
      - manual-terraform-apply-live-2-eks
      - manual-terraform-apply-live-2-core
      - manual-terraform-apply-live-2-components
  - name: manual-infra-apply-manager
    jobs:
      - manual-terraform-apply-manager-eks
      - manual-terraform-apply-manager-core
      - manual-terraform-apply-manager-components
  - name: manual-infra-apply-live
    jobs:
      - manual-terraform-apply-live-eks
      - manual-terraform-apply-live-core
      - manual-terraform-apply-live-components

jobs:
  - name: manual-terraform-apply-live-2-eks
    plan:
      - in_parallel:
          - get: cloud-platform-cli
          - get: cloud-platform-infrastructure-repo
            trigger: true
            version: every
      - task: execute-live-2-eks-apply
        image: cloud-platform-cli
        config:
          platform: linux
          params:
            <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
          inputs:
            - name: cloud-platform-infrastructure-repo
          run:
            path: /bin/bash
            dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks
            args:
              - -c
              - |
                aws eks --region eu-west-2 update-kubeconfig --name live-2
                cloud-platform terraform apply --workspace live-2 --skip-version-check
  - name: manual-terraform-apply-live-2-core
    plan:
      - in_parallel:
          - get: cloud-platform-cli
          - get: cloud-platform-infrastructure-repo
            trigger: true
            version: every
      - task: execute-live-2-core-apply
        image: cloud-platform-cli
        config:
          platform: linux
          params:
            <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
          inputs:
            - name: cloud-platform-infrastructure-repo
          run:
            path: /bin/bash
            dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks/core
            args:
              - -c
              - |
                aws eks --region eu-west-2 update-kubeconfig --name live-2
                cloud-platform terraform apply --workspace live-2 --skip-version-check
  - name: manual-terraform-apply-live-2-components
    serial: true
    plan:
      - in_parallel:
          - get: cloud-platform-cli
          - get: cloud-platform-infrastructure-repo
      - task: execute-live-2-components-apply
        image: cloud-platform-cli
        config:
          platform: linux
          params:
            <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
          inputs:
            - name: cloud-platform-infrastructure-repo
          run:
            path: /bin/bash
            dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks/core/components
            args:
              - -c
              - |
                pwd
                ls
                aws eks --region eu-west-2 update-kubeconfig --name live-2
                cloud-platform terraform apply --workspace live-2 --skip-version-check
  - name: manual-terraform-apply-manager-eks
    plan:
      - in_parallel:
          - get: cloud-platform-cli
          - get: cloud-platform-infrastructure-repo
      - task: execute-manager-eks-apply
        image: cloud-platform-cli
        config:
          platform: linux
          params:
            <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
          inputs:
            - name: cloud-platform-infrastructure-repo
          run:
            path: /bin/bash
            dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks
            args:
              - -c
              - |
                aws eks --region eu-west-2 update-kubeconfig --name manager
                cloud-platform terraform apply --workspace manager --skip-version-check
  - name: manual-terraform-apply-manager-core
    plan:
      - in_parallel:
          - get: cloud-platform-cli
          - get: cloud-platform-infrastructure-repo
      - task: execute-manager-core-apply
        image: cloud-platform-cli
        config:
          platform: linux
          params:
            <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
          inputs:
            - name: cloud-platform-infrastructure-repo
          run:
            path: /bin/bash
            dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks/core
            args:
              - -c
              - |
                aws eks --region eu-west-2 update-kubeconfig --name manager
                cloud-platform terraform apply --workspace manager --skip-version-check
  - name: manual-terraform-apply-manager-components
    serial: true
    plan:
      - in_parallel:
          - get: cloud-platform-cli
          - get: cloud-platform-infrastructure-repo
      - task: execute-manager-components-apply
        image: cloud-platform-cli
        config:
          platform: linux
          params:
            <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
          inputs:
            - name: cloud-platform-infrastructure-repo
          run:
            path: /bin/bash
            dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks/core/components
            args:
              - -c
              - |
                aws eks --region eu-west-2 update-kubeconfig --name manager
                cloud-platform terraform apply --workspace manager --skip-version-check
  - name: manual-terraform-apply-live-eks
    plan:
      - in_parallel:
          - get: cloud-platform-cli
          - get: cloud-platform-infrastructure-repo
      - task: execute-live-eks-apply
        image: cloud-platform-cli
        config:
          platform: linux
          params:
            <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
          inputs:
            - name: cloud-platform-infrastructure-repo
          run:
            path: /bin/bash
            dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks
            args:
              - -c
              - |
                aws eks --region eu-west-2 update-kubeconfig --name live
                cloud-platform terraform apply --workspace live --skip-version-check
  - name: manual-terraform-apply-live-core
    plan:
      - in_parallel:
          - get: cloud-platform-cli
          - get: cloud-platform-infrastructure-repo
      - task: execute-live-eks-apply
        image: cloud-platform-cli
        config:
          platform: linux
          params:
            <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
          inputs:
            - name: cloud-platform-infrastructure-repo
          run:
            path: /bin/bash
            dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks/core
            args:
              - -c
              - |
                aws eks --region eu-west-2 update-kubeconfig --name live
                cloud-platform terraform apply --workspace live --skip-version-check
  - name: manual-terraform-apply-live-components
    serial: true
    plan:
      - in_parallel:
          - get: cloud-platform-cli
          - get: cloud-platform-infrastructure-repo
      - task: execute-live-apply-apply
        image: cloud-platform-cli
        config:
          platform: linux
          params:
            <<: [*AUTH0_CONF, *AWS_CREDENTIALS, *KUBECONFIG_PARAMS]
          inputs:
            - name: cloud-platform-infrastructure-repo
          run:
            path: /bin/bash
            dir: cloud-platform-infrastructure-repo/terraform/aws-accounts/cloud-platform-aws/vpc/eks/core/components
            args:
              - -c
              - |
                aws eks --region eu-west-2 update-kubeconfig --name live
                cloud-platform terraform apply --workspace live --skip-version-check
