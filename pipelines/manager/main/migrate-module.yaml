resources:
  - name: tools-image
    type: docker-image
    source:
      repository: ministryofjustice/cloud-platform-tools
      tag: "2.9.8"
      username: ((ministryofjustice-dockerhub.dockerhub_username))
      password: ((ministryofjustice-dockerhub.dockerhub_password))

  - name: cloud-platform-infrastructure-repository
    type: git
    source:
      uri: https://github.com/ministryofjustice/cloud-platform-infrastructure.git
      branch: main
      git_crypt_key: ((cloud-platform-infrastructure-git-crypt.key))

aws-credentials: &AWS_CREDENTIALS
  AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
  AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
  AWS_REGION: eu-west-2

groups:
  - name: migrate-module
    jobs:
      - migrate

jobs:
  - name: migrate
    plan:
      - in_parallel:
          - get: cloud-platform-infrastructure-repository
          - get: tools-image
      - task: migrate-module
        image: tools-image
        config:
          platform: linux
          params:
            <<: [*AWS_CREDENTIALS]
            CLUSTER_NAME: ((cluster_name))
            MODULE: ((module))
            MTM_VERSION: "2.1.0"
            RESOURCES: ((resources))
            RESOURCES_FLAGGED: ((resources_flagged))
          inputs:
            - name: cloud-platform-infrastructure-repository
          run:
            path: /bin/bash
            dir: cloud-platform-infrastructure-repository/terraform/aws-accounts/cloud-platform-aws/vpc/eks
            args:
              - -c
              - |
                python3 -m ensurepip --upgrade

                curl -L https://github.com/ministryofjustice/cloud-platform-mtm/releases/download/v$MTM_VERSION/cloud_platform_mtm-$MTM_VERSION-py3-none-any.whl --output cloud_platform_mtm-$MTM_VERSION-py3-none-any.whl
                pip3 install cloud_platform_mtm-$MTM_VERSION-py3-none-any.whl

                cd core

                terraform init
                echo "Setting core workspace $CLUSTER_NAME"
                terraform workspace select $CLUSTER_NAME
                terraform state pull > core.tfstate

                cd components

                terraform init
                echo "Setting components workspace $CLUSTER_NAME"
                terraform workspace select $CLUSTER_NAME
                terraform state pull > components.tfstate

                mkdir mtm
                mv components.tfstate mtm/
                mv ../core.tfstate mtm/
                cd mtm
                cp components.tfstate componentsNew.tfstate
                cp core.tfstate coreNew.tfstate

                echo "Migrate resources"
                while IFS=',' read -ra RESOURCE; do
                  for i in "${RESOURCE[@]}"; do
                    echo $i
                    mtm migrate-resource $i componentsNew.tfstate coreNew.tfstate
                  done
                done <<< "$RESOURCES"

                echo "Migrate flagged resources"
                while IFS=',' read -ra RESOURCE; do
                  for i in "${RESOURCE[@]}"; do
                    echo $i
                    mtm migrate-resource $i componentsNew.tfstate coreNew.tfstate --remove-module
                  done
                done <<< "$RESOURCES_FLAGGED"

                echo "Migrate module"
                mtm migrate-module $MODULE componentsNew.tfstate coreNew.tfstate

                cp coreNew.tfstate ../../coreNew.tfstate
                cp componentsNew.tfstate ../componentsNew.tfstate

                echo "Force pushing state to components"
                cd ..
                terraform state push -force componentsNew.tfstate

                echo "Force pushing state to core"
                cd ..
                terraform state push -force coreNew.tfstate
